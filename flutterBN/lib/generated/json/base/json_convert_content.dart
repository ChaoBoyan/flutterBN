// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutterBN/douban/home/model/home_list_entity.dart';
import 'package:flutterBN/generated/json/home_list_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HomeListEntity:
			return homeListEntityFromJson(data as HomeListEntity, json) as T;			case HomeListSubject:
			return homeListSubjectFromJson(data as HomeListSubject, json) as T;			case HomeListSubjectsRating:
			return homeListSubjectsRatingFromJson(data as HomeListSubjectsRating, json) as T;			case HomeListSubjectsRatingDetails:
			return homeListSubjectsRatingDetailsFromJson(data as HomeListSubjectsRatingDetails, json) as T;			case HomeListSubjectsCast:
			return homeListSubjectsCastFromJson(data as HomeListSubjectsCast, json) as T;			case HomeListSubjectsCastsAvatars:
			return homeListSubjectsCastsAvatarsFromJson(data as HomeListSubjectsCastsAvatars, json) as T;			case HomeListSubjectsDirector:
			return homeListSubjectsDirectorFromJson(data as HomeListSubjectsDirector, json) as T;			case HomeListSubjectsDirectorsAvatars:
			return homeListSubjectsDirectorsAvatarsFromJson(data as HomeListSubjectsDirectorsAvatars, json) as T;			case HomeListSubjectsImages:
			return homeListSubjectsImagesFromJson(data as HomeListSubjectsImages, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HomeListEntity:
			return homeListEntityToJson(data as HomeListEntity);			case HomeListSubject:
			return homeListSubjectToJson(data as HomeListSubject);			case HomeListSubjectsRating:
			return homeListSubjectsRatingToJson(data as HomeListSubjectsRating);			case HomeListSubjectsRatingDetails:
			return homeListSubjectsRatingDetailsToJson(data as HomeListSubjectsRatingDetails);			case HomeListSubjectsCast:
			return homeListSubjectsCastToJson(data as HomeListSubjectsCast);			case HomeListSubjectsCastsAvatars:
			return homeListSubjectsCastsAvatarsToJson(data as HomeListSubjectsCastsAvatars);			case HomeListSubjectsDirector:
			return homeListSubjectsDirectorToJson(data as HomeListSubjectsDirector);			case HomeListSubjectsDirectorsAvatars:
			return homeListSubjectsDirectorsAvatarsToJson(data as HomeListSubjectsDirectorsAvatars);			case HomeListSubjectsImages:
			return homeListSubjectsImagesToJson(data as HomeListSubjectsImages);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HomeListEntity':
			return HomeListEntity().fromJson(json);			case 'HomeListSubject':
			return HomeListSubject().fromJson(json);			case 'HomeListSubjectsRating':
			return HomeListSubjectsRating().fromJson(json);			case 'HomeListSubjectsRatingDetails':
			return HomeListSubjectsRatingDetails().fromJson(json);			case 'HomeListSubjectsCast':
			return HomeListSubjectsCast().fromJson(json);			case 'HomeListSubjectsCastsAvatars':
			return HomeListSubjectsCastsAvatars().fromJson(json);			case 'HomeListSubjectsDirector':
			return HomeListSubjectsDirector().fromJson(json);			case 'HomeListSubjectsDirectorsAvatars':
			return HomeListSubjectsDirectorsAvatars().fromJson(json);			case 'HomeListSubjectsImages':
			return HomeListSubjectsImages().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HomeListEntity':
			return List<HomeListEntity>();			case 'HomeListSubject':
			return List<HomeListSubject>();			case 'HomeListSubjectsRating':
			return List<HomeListSubjectsRating>();			case 'HomeListSubjectsRatingDetails':
			return List<HomeListSubjectsRatingDetails>();			case 'HomeListSubjectsCast':
			return List<HomeListSubjectsCast>();			case 'HomeListSubjectsCastsAvatars':
			return List<HomeListSubjectsCastsAvatars>();			case 'HomeListSubjectsDirector':
			return List<HomeListSubjectsDirector>();			case 'HomeListSubjectsDirectorsAvatars':
			return List<HomeListSubjectsDirectorsAvatars>();			case 'HomeListSubjectsImages':
			return List<HomeListSubjectsImages>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}